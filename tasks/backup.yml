---
- name: Ensure Git is installed
  package:
    name: git
    state: present
  tags:
    - grafana-backup
- name: Ensure Crond is installed
  package:
    name: cron
    state: present
  tags:
    - grafana-backup
- name: Install requirements for grafana backup tool
  pip:
    executable: pip
    name: requests
    state: present
  tags:
    - grafana-backup
- name: Create backup data tmp directory
  file:
    path: "{{ grafana_backup_tmp_dir }}"
    state: directory
    owner: grafana
    group: grafana
    mode: 0755
  tags:
    - grafana-backup
    - grafana-backup-dir
- name: Create backup data archive directory
  file:
    path: "{{ grafana_backup_archive_dir }}"
    state: directory
    owner: grafana
    group: grafana
    mode: 0755
  tags:
    - grafana-backup
    - grafana-backup-dir
- name: Check out Grafana Backup Tool
  git:
    repo: "https://github.com/constructorfleet/grafana-backup-tool.git"
    version: master
    dest: "{{ grafana_backup_tool_dir }}"
    force: yes
  tags:
    - grafana-backup
    - grafana-backup-repo

- name: Update grafana backup script settings config from template
  template:
    src: grafanaSettings.py.j2
    dest: "{{ grafana_backup_tool_dir }}/grafanaSettings.py"
    force: yes
    backup: no
    owner: grafana
    group: grafana
    mode: 0755
  tags:
    - grafana-backup-settings
    - grafana-backup
- name: Update grafana backup script from template
  template:
    src: backup_grafana.sh.j2
    dest: "{{ grafana_backup_tool_dir }}/backup_grafana.sh"
    force: yes
    backup: no
    owner: grafana
    group: grafana
    mode: 0755
  tags:
    - grafana-backup
    - grafana-backup-script
- name: Creates Grafana backup Cron job
  cron:
    name: "grafana create backup"
    minute: '0'
    hour: '0'
    user: grafana
    job: '{{ grafana_backup_tool_dir }}/backup_grafana.sh && find {{ grafana_backup_archive_dir }}/ -mtime +3 -exec rm -f {} \;'
    cron_file: ansible-grafana_backup
  tags:
    - grafana-backup
    - grafana-backup-cron