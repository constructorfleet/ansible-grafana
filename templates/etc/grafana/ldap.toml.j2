# To troubleshoot and get more log info enable ldap debug logging in grafana.ini
# [log]
# filters = ldap:debug

[[servers]]

# Ldap server host (specify multiple hosts space separated)
host = "{{ grafana_openldap_server_ip }}"

# Default port is 389 or 636 if use_ssl = true
port = "{{ grafana_openldap_port }}"

# Set to true if ldap server supports TLS
{% if grafana_openldap_server_enable_ssl %}
use_ssl = true
start_tls = true
{% else %}
use_ssl = false
start_tls = false
{% endif %}


# set to true if you want to skip ssl cert validation
{% if grafana_openldap_server_enable_ssl %}
{% if grafana_openldap_ssl_skip_verify %}
ssl_skip_verify = true
{% else %}
ssl_skip_verify = false
{% endif %}
{% endif %}

# set to the path to your root CA certificate or leave unset to use system defaults
# root_ca_cert = "/path/to/certificate.crt"
# Authentication against LDAP servers requiring client certificates
{% if grafana_openldap_server_enable_ssl %}
client_cert = "{{ grafana_openldap_ssl_certpath }}"
client_key = "{{ grafana_openldap_ssl_keypath }}"
{% endif %}
# Search user bind dn
bind_dn = "{{ grafana_openldap_server_bind_dn }}"
# Search user bind password
# If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
bind_password = "{{ grafana_openldap_server_rootpw }}"

# User search filter, for example "(cn=%s)" or "(sAMAccountName=%s)" or "(uid=%s)"
search_filter = "{{ grafana_openldap_search_filter|default('(uid=%s)') }}"

# An array of base dns to search through
search_base_dns = ["{{ grafana_openldap_server_dc }}"]

## For Posix or LDAP setups that does not support member_of attribute you can define the below settings
## Please check grafana LDAP docs for examples
group_search_filter = "{{ grafana_group_search_filter|default('(&(objectClass=posixGroup)(memberUid=%s))') }}"
group_search_base_dns = ["{{ grafana_groups_ou }}"]

{% for item in grafana_ldap_configurations %}
{% if item.name == 'attributes' %}
# Specify names of the ldap attributes your ldap uses
[servers.attributes]
{% elif item.name == 'group_mappings' %}
# Map ldap groups to grafana org roles
[[servers.group_mappings]]
{% endif %}
{% if item.options is defined %}
{% for key, value in item.options.items() %}
{{ key }} = "{{ value }}"
{% endfor %}
{% endif %}
{% endfor %}


